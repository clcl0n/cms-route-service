// <auto-generated />
using System;
using Cms.RouteService.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Cms.RouteService.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(RouteDbContext))]
    [Migration("20250517131728_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("cms-route-service")
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Cms.RouteService.Domain.Entities.BaseRoute", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("path");

                    b.Property<Guid>("RoutePrefixId")
                        .HasColumnType("uuid")
                        .HasColumnName("route_prefix_id");

                    b.HasKey("Id");

                    b.HasIndex("RoutePrefixId");

                    b.ToTable((string)null);

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("Cms.RouteService.Domain.Entities.RoutePrefix", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Prefix")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("prefix");

                    b.HasKey("Id")
                        .HasName("pk_route_prefix");

                    b.HasIndex("Prefix")
                        .IsUnique()
                        .HasDatabaseName("IX_route_prefix___prefix");

                    b.ToTable("route_prefix", "cms-route-service");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bb8c0612-4601-49e0-b9af-bd5b90593c9f"),
                            Prefix = "posts"
                        });
                });

            modelBuilder.Entity("Cms.RouteService.Domain.Entities.PostRoute", b =>
                {
                    b.HasBaseType("Cms.RouteService.Domain.Entities.BaseRoute");

                    b.HasIndex("Path")
                        .IsUnique()
                        .HasDatabaseName("IX_route___path");

                    b.ToTable("post_route", "cms-route-service");
                });

            modelBuilder.Entity("Cms.RouteService.Domain.Entities.BaseRoute", b =>
                {
                    b.HasOne("Cms.RouteService.Domain.Entities.RoutePrefix", "RoutePrefix")
                        .WithMany()
                        .HasForeignKey("RoutePrefixId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoutePrefix");
                });
#pragma warning restore 612, 618
        }
    }
}
